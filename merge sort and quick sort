MERGE SORT
def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr)  
        left = arr[:mid]     
        right = arr[mid:]
        merge_sort(left)    
        merge_sort(right)   
        i = j = k = 0
        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                arr[k] = left[i]
                i += 1
            else:
                arr[k] = right[j]
                j += 1
            k += 1

       
        while i < len(left):
            arr[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            arr[k] = right[j]
            j += 1
            k += 1


arr1 = [38, 27, 43, 3, 9, 82, 10]
print("Original array", arr1)
merge_sort(arr1)
print("Sorted array:", arr1)


OUTPUT:
Original array [38, 27, 43, 3, 9, 82, 10]
Sorted array: [3, 9, 10, 27, 38, 43, 82]

QUICK SORT:
def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less = [x for x in arr[1:] if x <= pivot]  
        greater = [x for x in arr[1:] if x > pivot]  
        return quick_sort(less) + [pivot] + quick_sort(greater)


arr2 = [10, 7, 8, 9, 1, 5]
print("Original array):", arr2)
sorted_arr2 = quick_sort(arr2)
print("Sorted array:", sorted_arr2)

OUTPUT:
Original array : [10, 7, 8, 9, 1, 5]
Sorted array: [1, 5, 7, 8, 9, 10]
